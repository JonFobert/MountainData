{"version":3,"sources":["components/Graph.js","components/CustomDropdown.js","components/Selector.js","index.js"],"names":["Graph","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onNearestXY","value","_ref","index","setState","hintValue","console","log","onMouseLeave","calculateUnusedSelection","x","y","selections","xIndex","indexOf","splice","yIndex","formatLabelTitle","label","calculateColor","state","hint","xAxisValue","yAxisValue","other","mountainData","MountainsData","map","mountain","size","name","color","statename","react_default","a","createElement","es","className","height","width","margin","left","right","top","bottom","colorType","title","style","fontSize","strokeWidth","opacity","sizeRange","data","cx","cy","r","fill","React","Component","CustomDropdownItem","onItemClick","handleItemClick","item","currentSelectedItem","onClick","CustomDropdownItems","_this2","filterItems","items","filter","otherSelectedItem","_this3","displayedItems","dropdownActivated","CustomDropdown_CustomDropdownItem","key","id","toString","CustomDropdownHeader","_this4","onHeaderClick","keys","length","points","CustomDropdown","_this5","CustomDropdown_CustomDropdownHeader","CustomDropdown_CustomDropdownItems","Selector","components_CustomDropdown","dropdownItems","handleItemClickY","handleItemClickX","App","selectionChanged","graph","CSSTransition","in","appear","timeout","enter","onEntered","classNames","components_Graph","classname","class","href","src","components_Selector","DROPDOWNITEMS","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5ccca74f.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MountainsData from '../mountains.json'\nimport '../../node_modules/react-vis/dist/style.css';\nimport {\n    XYPlot,\n    XAxis,\n    YAxis,\n    VerticalGridLines,\n    HorizontalGridLines,\n    MarkSeries,\n    Hint\n\n  } from 'react-vis';\n\nclass Graph extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {hintValue: {}};\n    }\n\n    onNearestXY = (value, {index}) => {\n        this.setState({hintValue: value})\n        console.log(value)\n    };\n\n    onMouseLeave = () => {\n        this.setState({hintValue: {}})\n        console.log(\"Left!\")\n    };\n\n    calculateUnusedSelection = (x, y) => {\n        let selections = [\"vertical\", \"price\", \"time\"];\n        let xIndex = selections.indexOf(x)\n        if (xIndex !== -1) selections.splice(xIndex, 1)\n        let yIndex = selections.indexOf(y)\n        if (yIndex !== -1) selections.splice(yIndex, 1)\n        return selections[0]\n    };\n\n    formatLabelTitle = (label) => {\n        if (label === 'price') {\n            return 'Price ($)';\n        } else if (label === 'vertical') {\n            return 'Vertical Feet';\n        } else if (label === 'time') {\n            return 'Travel Time from Boston (Minutes)'\n        }\n    };\n\n    calculateColor = (state) => {\n        if (state === 'VT') {\n            return '#24492D';\n        } else if (state === 'NH') {\n            return '#2F2504';\n        } else if (state === 'MA') {\n            return '#5B99E5'\n        } else if (state === 'ME') {\n            return '#565656'\n        }\n    };\n    \n\n    render() {\n\n        const x = this.props.xAxisValue;\n        const y = this.props.yAxisValue;\n        const other = this.calculateUnusedSelection(x, y)\n        const calculateColor = this.calculateColor;\n        let mountainData = MountainsData.map((mountain) => {\n            return {x: mountain[x],\n                    y: mountain[y],\n                    size: mountain[other],\n                    name: mountain.name,\n                    color: calculateColor(mountain.statename)\n                    }\n        })\n\n        let hint;\n        if (this.state.hintValue.name) {\n            hint = <Hint className = \"hint\" value = {this.state.hintValue}>\n                        <div>\n                            <h3>{this.state.hintValue.name}</h3>\n                                <p>{this.formatLabelTitle(other)}: {this.state.hintValue.size}</p>\n                        </div>\n                    </Hint>\n        }\n\n        return(\n                <div className=\"graph\">\n                    <XYPlot height={500} width = {700} margin = {{left: 80, right: 30, top: 30, bottom: 30}} colorType =\"literal\" onMouseLeave={this.onMouseLeave}>\n                        <VerticalGridLines />\n                        <HorizontalGridLines />\n                        <XAxis title={this.formatLabelTitle(x)} style={{fontSize: 14}}/>\n                        <YAxis title={this.formatLabelTitle(y)} style={{fontSize: 14}}/>\n                        <MarkSeries onNearestXY={this.onNearestXY}\n                            className=\"mark-series-example\"\n                            strokeWidth={2}\n                            opacity=\"0.8\"\n                            sizeRange={[5,25]}\n                            data ={mountainData}\n                        />\n                        {hint}\n                        \n                    </XYPlot>\n                    <div className = \"legend\">\n                        <div>\n                            <svg width=\"36\" height=\"36\">\n                                    <circle cx = \"18\" cy =\"15\" r = \"10\" fill= \"#4f6d56\" ></circle>\n                                </svg>\n                            <span>Vermont</span>\n                        </div>\n                        <div>\n                            <svg width=\"36\" height=\"36\">\n                                    <circle cx = \"18\" cy =\"15\" r = \"10\" fill= \"#7badea\" ></circle>\n                                </svg>\n                            <span>Massachusetts</span>\n                        </div>\n                        <div>\n                            <svg width=\"36\" height=\"36\">\n                                    <circle cx = \"18\" cy =\"15\" r = \"10\" fill= \"#585036\" ></circle>\n                                </svg>\n                            <span>New Hampshire</span>\n                        </div>\n                        <div>\n                            <svg width=\"36\" height=\"36\">\n                                    <circle cx = \"18\" cy =\"15\" r = \"10\" fill= \"#777777\" ></circle>\n                                </svg>\n                            <span>Maine</span>\n                        </div>\n                    </div>\n                </div>\n        )    \n    }\n}\n\nexport default Graph","import React from 'react';\n\n\nclass CustomDropdownItem extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    onItemClick = () => {\n        this.props.handleItemClick(this.props.item)\n    }\n\n    render() {\n        let item\n        if (this.props.item.name === this.props.currentSelectedItem.name) {\n            item = <li className=\"dropdownItem selectedDropdownItem\" onClick = {this.onItemClick}>{this.props.item.name}</li>\n        } else {\n            item = <li className=\"dropdownItem\" onClick = {this.onItemClick}>{this.props.item.name}</li>\n        }\n        return item;\n    }\n}\n\nclass CustomDropdownItems extends React.Component {\n    constructor(props) {\n        super(props)\n    } \n\n    filterItems = (items) => {\n        return items.filter(item => item !== this.props.otherSelectedItem )\n    }\n\n    render() {\n        let dropdownItems;\n        let displayedItems = this.filterItems(this.props.items);\n        if(this.props.dropdownActivated) {\n            dropdownItems = \n                <ul className=\"dropdownItems\">\n                    {displayedItems.map((item) => {\n                        return <CustomDropdownItem key = {item.id.toString()} currentSelectedItem = {this.props.currentSelectedItem} item = {item} handleItemClick = {this.props.handleItemClick}></CustomDropdownItem>\n                    })}\n                </ul>\n        } else {\n            dropdownItems = null\n        }\n\n        return dropdownItems\n    }\n}\n\nclass CustomDropdownHeader extends React.Component {\n    constructor(props) {\n        super(props)\n    }   \n\n    onHeaderClick = () => {\n        this.props.onHeaderClick()\n    }\n\n    render() {\n        let dropdownHeading;\n        if (this.props.dropdownActivated && (Object.keys(this.props.currentSelectedItem).length == 0)) {\n                dropdownHeading = \n                    <h1 className=\"dropdownHeading headingActivated\" onClick = {this.onHeaderClick}>{\n                        this.props.label + ' Axis'}\n                        <svg height=\"10\" width=\"20\">\n                            <polygon className = \"arrow\" points=\"0,7 10,7 5,0\" />\n                        </svg>\n                    </h1>\n        }\n        else if (this.props.dropdownActivated) {\n            dropdownHeading = \n                <h1 className=\"dropdownHeading headingActivated\" onClick = {this.onHeaderClick}>\n                    {this.props.currentSelectedItem.name}\n                    <svg height=\"10\" width=\"20\">\n                        <polygon className = \"arrow\" points=\"0,7 10,7 5,0\" />\n                    </svg>\n                </h1>\n        }\n        \n        else if (Object.keys(this.props.currentSelectedItem).length == 0) {\n            dropdownHeading = \n                <h1 className=\"dropdownHeading\" onClick = {this.onHeaderClick}>{\n                    this.props.label + ' Axis'}\n                    <svg height=\"10\" width=\"20\">\n                        <polygon className = \"arrow\" points=\"0,0 10,0 5,7\" />\n                    </svg>\n                </h1>\n        } else {\n            dropdownHeading = \n                <h1 className=\"dropdownHeading\" onClick = {this.onHeaderClick}>\n                    {this.props.currentSelectedItem.name}\n                    <svg height=\"10\" width=\"20\">\n                        <polygon className = \"arrow\" points=\"0,0 10,0 5,7\" />\n                    </svg>\n                </h1>\n        }\n        return dropdownHeading;\n    }\n}\n\n\n\nclass CustomDropdown extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {dropdownActivated: false}\n    }   \n\n    onHeaderClick = () => {\n        this.setState(state => ({\n            dropdownActivated: !state.dropdownActivated\n        }))\n    }\n\n\n    handleItemClick = (item) => {\n        this.props.handleItemClick(item)\n        this.setState(state => ({\n            dropdownActivated: !state.dropdownActivated\n        }))\n    }\n\n    render() {\n        return(\n            <div className = \"dropdownDiv\">\n                <CustomDropdownHeader\n                    currentSelectedItem={this.props.currentSelectedItem}\n                    onHeaderClick = {this.onHeaderClick}\n                    label = {this.props.label}\n                    dropdownActivated = {this.state.dropdownActivated}\n                /> \n                \n                <CustomDropdownItems\n                    items = {this.props.items}\n                    dropdownActivated = {this.state.dropdownActivated}\n                    handleItemClick = {this.handleItemClick}\n                    currentSelectedItem={this.props.currentSelectedItem}\n                    otherSelectedItem = {this.props.otherSelectedItem}\n                />\n            </div>\n        )\n    }\n}\n\nexport default CustomDropdown","import React from 'react'\nimport CustomDropdown from './CustomDropdown.js'\n\nclass Selector extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return(\n            <div className = \"selectorDiv\">\n                Show me: <CustomDropdown\n                    label = {'Y'}\n                    items = {this.props.dropdownItems}\n                    otherSelectedItem = {this.props.xAxisValue}\n                    currentSelectedItem = {this.props.yAxisValue}\n                    handleItemClick = {this.props.handleItemClickY}\n            >\n                </CustomDropdown>\n                versus\n                <CustomDropdown\n                    label = {'X'}\n                    items = {this.props.dropdownItems}\n                    otherSelectedItem = {this.props.yAxisValue}\n                    currentSelectedItem = {this.props.xAxisValue}\n                    handleItemClick = {this.props.handleItemClickX}\n                >\n                </CustomDropdown>\n            </div>\n        )\n    }\n}\n\nexport default Selector;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Graph from './components/Graph.js';\nimport Selector from './components/Selector.js';\nimport { CSSTransition } from \"react-transition-group\";\n\n//https://coolors.co/f4f4f4-5b99e5-e52d5e-24492d-2f2504\n//To Do: Add legend for colors\n//       Adjust help text css\n//       Checkbox to show name labels\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {xAxisValue: {}, yAxisValue: {}, selectionChanged: false}\n    }\n\n    handleItemClickX = (item) => {\n        this.setState({xAxisValue: item})\n        this.setState({selectionChanged: true})\n    }\n\n    handleItemClickY = (item) => {\n        this.setState({yAxisValue: item})\n        this.setState({selectionChanged: true})\n    }\n\n    render() {\n        let graph;\n        //if both x axis and Y axis are selected then create the graph\n        if(Object.keys(this.state.xAxisValue).length !==0 && Object.keys(this.state.yAxisValue).length !==0) {\n            graph = \n            <CSSTransition\n                //if the selection for the x or y axis changed recently than animate the graph appearing or entering\n                in={this.state.selectionChanged}\n                appear={true}\n                timeout = {{\n                    appear: 800,\n                    enter: 300\n                }}\n                //Once the graph has appeared consider the selection unchanged\n                onEntered = {() => this.setState({selectionChanged: false})}\n                classNames=\"graphFade\">\n               <Graph xAxisValue = {this.state.xAxisValue.name}\n                      yAxisValue = {this.state.yAxisValue.name} />\n            </CSSTransition>\n        }\n\n        return(\n            <div className = \"containter\">\n                    <div className = \"topBar\">\n                        <div className = \"invisible\">A</div>\n                        <h1 classname = \"pageTitle\">New England Ski Visualizer</h1>\n                        <div class= \"githubLink\">\n                            <a href = 'https://github.com/JonFobert'>\n                                <img src = './githubLogo.png'></img>\n                            </a>\n                            <a href = 'https://github.com/JonFobert'>/JonFobert</a>\n                        </div>\n                    </div>\n                <CSSTransition\n                    in={true}\n                    appear={true}\n                    timeout = {300}\n                    classNames=\"selectorFade\">\n                    <Selector\n                        dropdownItems = {DROPDOWNITEMS}\n                        xAxisValue = {this.state.xAxisValue}\n                        yAxisValue = {this.state.yAxisValue}\n                        handleItemClickX = {this.handleItemClickX}\n                        handleItemClickY = {this.handleItemClickY}\n                    />\n                </CSSTransition>\n                {graph}\n            </div> \n        )\n    }\n}\n\nconst DROPDOWNITEMS = [ \n    {id: 0, name: 'vertical'},\n    {id: 1, name: 'price'},\n    {id: 2, name: 'time'}\n]\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}